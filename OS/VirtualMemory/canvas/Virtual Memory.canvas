{
	"nodes":[
		{"id":"9a598b39cb856d3b","type":"file","file":"OS/VirtualMemory/canvas/가상 메모리(Virtual Memory).md","x":-400,"y":-60,"width":625,"height":731},
		{"id":"298d6247f8b29341","type":"text","text":"- **보다 많은 개수의 프로세스를 주기억장치에 유지할 수 있다.**\n\t- 준비 상태 프로세스가 존재할 가능성이 높아져 처리기 활용도가 높아진다.\n- **주기억장치보다 큰 프로세스를 수행할 수 있다.**\n\t- 오버레이 기법을 적용하기 위한 프로그래머의 부담을 운영체제가 담당한다.","x":660,"y":-159,"width":519,"height":190},
		{"id":"9712ae46e94a717d","type":"text","text":"- 가상주소를 물리주소로 변환하는 과정은 **MMU(메모리 관리장치)**에 의해 수행\n- 주소 간의 변환관계를 정의한 정보는 **페이지 테이블(Page Table)**에 보관 <- OS가 관리\n![[Pasted image 20240124031836.png]]\n![[Pasted image 20240124031951.png]]\n\n- 가상 주소공간은 4GB 공간이고 페이지 크기가 4KB일 때\n- 논리주소가 0000 0000 0000 0001 1001 / 0000 0000 0011b일 경우 -> 페이지 번호 25, 변위는 3\n\t- 페에지 테이블의 25위치에 저장된 프레임 번호는 00002, 페이지 변위가 003이므로\n\t- 생성되는 물리적 주소는 (00002#003)16 = (00002003)16 = (8195)10\n![[Pasted image 20240124035314.png]]","x":660,"y":125,"width":720,"height":1180},
		{"id":"f5afcd0014b208ef","type":"file","file":"OS/VirtualMemory/canvas/페이지 테이블 구조.md","x":640,"y":1545,"width":760,"height":503},
		{"id":"6bc29ca54ae4aa07","type":"file","file":"OS/VirtualMemory/canvas/가상메모리 동작원리.md","x":1660,"y":464,"width":760,"height":503},
		{"id":"933b46546eb6c875","type":"file","file":"OS/VirtualMemory/canvas/가상메모리의 실용성.md","x":-60,"y":940,"width":642,"height":916},
		{"id":"d91d00f1c7b302be","type":"file","file":"OS/VirtualMemory/canvas/지역성(Locality)의 원리.md","x":-780,"y":940,"width":544,"height":362},
		{"id":"98029daaf949d618","type":"file","file":"OS/VirtualMemory/canvas/페이징(Paging).md","x":-920,"y":-620,"width":691,"height":352},
		{"id":"1d10639d1e380c0e","type":"file","file":"OS/VirtualMemory/canvas/페이지 테이블 크기.md","x":-1357,"y":-1180,"width":783,"height":381},
		{"id":"b61d9a502d186a1a","type":"file","file":"OS/VirtualMemory/canvas/TLB(Translation Lookahead Buffer).md","x":-420,"y":-1147,"width":545,"height":348},
		{"id":"5d3d0d99d36d19a9","type":"text","text":"- 32비트 주소체계, 4KB 페이지 크기, 페이지 테이블 항목이 4B\n\t- 전체 페이지 테이블 크기 = 2^20개 PTE * 4B -> 4MB 크기의 전체 페이지 테이블\n\t- 4MB 페이지 테이블/페이지 크기(4KB) 수만큼의 2단계 페이지를 구성해 이 페이지들 안에 4KB 만큼의 페이지 테이블들을 기록하여 가상기억공간에 할당\n\t- 주기억장치에 존재하는 루트 페이지테이블을 이용 필요한 2단계 페이지 테이블을 접근\n![[Pasted image 20240124211327.png]]","x":-1880,"y":-1800,"width":745,"height":417},
		{"id":"9758a39423ec4485","type":"text","text":"- 기존의 프로세스 별 페이지 테이블을 검색할 때 주기억장치에 커다란 페이지 테이블을 올리고 검색하는 문제점 발생 -> 개**수가 적은 프레임 메모리를 중심으로 검색(역발상)**\n- 운영체제는 모든 프로세스가 공통으로 사용하는 역 페이지 테이블을 별도로 생성\n\t- **프레임 당 하나의 페이지테이블 항목(PTE)으로 역 페이지 테이블을 구성**하고 이 짧아진 테이블을 **주기억장치**에 위치 -> PTE 개수가 **물리메모리의 프레임 개수로 결정**\n\t- 기존의 프로세스 별 페이지 테이블 관리는 동일\n- 처리기가 페이지 번호 발생 시 MMU는 **역 페이지 테이블 내에서 페이지 번호를 검색**하여 존재 시 여기에 연결되어 있는 **프레임 번호**를 바로 참고하는 역발상 기법\n- 하나의 프레임을 여러 개의 프로세스가 이용할 수 있으므로 검색 시에 **프로세스 ID**도 확인 필요\n- 일반적으로 속도 향상을 위해 **해시(Hash)기법**을 이용\n\t- 해시함수를 이용하고 중복을 위한 연결(체인) 기법 사용","x":-1055,"y":-1718,"width":766,"height":335},
		{"id":"916c9cbe7c0f7464","type":"text","text":"- TLB 내에 원하는 페이지 번호가 있는지는 연관사상 방식으로 검색 -> 연관 검색\n\t- TLB 내에 모든 페이지 번호들이 있지 않기 때문에 빠른 연관메모리와 하드웨어의 도움을 받아 전체 TLB 내에서 원하는 페이지 번호가 있는지를 빠르게 검색","x":-217,"y":-1477,"width":685,"height":94},
		{"id":"d8adec7a1bf2ebcf","type":"text","text":"- 연관 기억 장치 또는 내용 지정 메모리(CAM: Content Addressable Memory)\n- 병렬 판독 회로를 내장하고 있어서 한번에 전체 내용의 비교 가능\n\t- 캐시 메모리 보다도 훨씬 빠르나 가격이 매우 비싸다\n- 작은 용량의 IC 메모리를 사용하며 캐시 메모리나 가상 메모리(TLB)의 주소 검색에 많이 사용\n### 구성\n- 검색 데이터 레지스터\n\t- 찾고자 하는 내용의 일부분을 입력\n- 마스크 레지스터\n\t- 검색에 필요 없는 부분을 마스크\n- CAM 영역\n\t- 태그+데이터를 한 라인으로 하여 m개의 라인\n- 일치 레지스터\n\t- 태그 영역에서 일치하는 단어를 찾았을 경우 해당 태그의 데이터 영역 값을 출력","x":-152,"y":-2100,"width":556,"height":522},
		{"id":"7b8823debaaa1b3a","x":-1840,"y":-720,"width":699,"height":400,"type":"text","text":"| 작은 크기의 페이지 | 큰 크기의 페이지 |\n| ---- | ---- |\n| **페이지 테이블의 크기 증가** | **페이지 테이블의 크기 감소** |\n| 페이지 테이블의 크기 증가로 페이지 fault 비율 상승 | 페이지 테이블의 크기 감소로 복수 fault 하락 |\n| 장기적 관점으로 **page fault 비율 하락** | 장기적 관점으로 **page fault 비율 상승** |\n| **내부 단편화 감소** | **내부 단편화 증가** |\n| **디스크 입출력 증가** | **디스크 입출력 감소** |"}
	],
	"edges":[
		{"id":"457e469b8fea6eb8","fromNode":"9a598b39cb856d3b","fromSide":"right","toNode":"298d6247f8b29341","toSide":"left","label":"부분적재 수행 이점"},
		{"id":"f69a987866a3315e","fromNode":"9a598b39cb856d3b","fromSide":"right","toNode":"9712ae46e94a717d","toSide":"left","label":"가상메모리/물리메모리 매핑"},
		{"id":"f72c2d7c166bd8ad","fromNode":"9712ae46e94a717d","fromSide":"bottom","toNode":"f5afcd0014b208ef","toSide":"top","label":"페이지 테이블 구조"},
		{"id":"78fd43ed903137df","fromNode":"9712ae46e94a717d","fromSide":"right","toNode":"6bc29ca54ae4aa07","toSide":"left","label":"동작원리"},
		{"id":"ce39dc92e00998f7","fromNode":"9a598b39cb856d3b","fromSide":"bottom","toNode":"933b46546eb6c875","toSide":"top","label":"실용성"},
		{"id":"a421942ed10051c7","fromNode":"9a598b39cb856d3b","fromSide":"bottom","toNode":"d91d00f1c7b302be","toSide":"top","label":"지역성의 원리"},
		{"id":"e9bafac9c77b1fd6","fromNode":"9a598b39cb856d3b","fromSide":"top","toNode":"98029daaf949d618","toSide":"bottom"},
		{"id":"12e6b1c65bc144c5","fromNode":"98029daaf949d618","fromSide":"top","toNode":"1d10639d1e380c0e","toSide":"bottom","label":"페이지 테이블 크기"},
		{"id":"44122db28596dddf","fromNode":"1d10639d1e380c0e","fromSide":"top","toNode":"5d3d0d99d36d19a9","toSide":"bottom","label":"n-단계 페이지 테이블(2단계 예시)"},
		{"id":"de1138d9d447d363","fromNode":"1d10639d1e380c0e","fromSide":"top","toNode":"9758a39423ec4485","toSide":"bottom","label":"역 페이지 테이블"},
		{"id":"12f0ac058b561005","fromNode":"98029daaf949d618","fromSide":"top","toNode":"b61d9a502d186a1a","toSide":"bottom","label":"TLB"},
		{"id":"435160c7a66ede04","fromNode":"b61d9a502d186a1a","fromSide":"top","toNode":"916c9cbe7c0f7464","toSide":"bottom","label":"TLB에 대한 연관사상"},
		{"id":"a15e13840b2ac0cb","fromNode":"916c9cbe7c0f7464","fromSide":"top","toNode":"d8adec7a1bf2ebcf","toSide":"bottom","label":"연관 메모리(Associative Memory) - 연관 검색"},
		{"id":"53eefea3b2ad8f22","fromNode":"98029daaf949d618","fromSide":"left","toNode":"7b8823debaaa1b3a","toSide":"right"}
	]
}