{
	"nodes":[
		{"id":"65666eefcf08e6b4","x":-551,"y":-46,"width":368,"height":38,"type":"text","text":"# 사용자 수에 따른 규모 확장성"},
		{"id":"a8da08442d66dc09","x":37,"y":-328,"width":643,"height":435,"type":"text","text":"### 사용자 요청 처리 흐름\n1. 사용자는 도메인 이름을 이용하여 웹사이트에 접속한다. 이 접속을 위해서는 도메인 이름을 도메인 이름 서비스에 질의하여 IP 주소로 변환하는 과정이 필요하다.\n   DNS는 보통 제3 사업자(thrid party)가 제공하는 유료 서비스를 이용하게 되므로, 우리 시스템의 일부는 아니다.\n2. DNS 조회 결과로 IP 주소가 반환된다.\n3. 해당 IP 주소로 HTTP(HyperText Transfer Protocol) 요청이 전달된다.\n4. 요청을 받은 웹 서버는 HTML 페이지나 JSON 형태의 응답을 반환한다.\n\n- **웹 애플리케이션**: 비즈니스 로직, 데이터 저장 등을 처리하기 위해서는 서버 구현용 언어(자바, 파이썬 등)를 사용하고, 프레젠테이션용으로는 클라이언트 구현용 언어(HTML, 자바스크립트 등)를 사용한다.\n- **모바일 앱**: 모바일 앱과 웹 서버 간 통신을 위해서는 HTTP 프로토콜을 이용한다. HTTP 프로토콜을 통해서 반환될 응답 데이터의 포맷으로는 보통 JSON(Javascript Object Notation)이 그 간결합 덕에 널리 쓰인다."},
		{"id":"cb7189ed5a1a51a8","x":97,"y":-900,"width":523,"height":209,"type":"text","text":"다음과 같은 경우에는 비-관계형 데이터베이스가 바람직한 선택일 수 있다.\n- 아주 낮은 응답 지연시간(latency)이 요구됨\n- 다루는 데이터가 비정형(unstructured)이라 관계형 데이터가 아님\n- 데이터(JSON, YAML, XML 등)를 직렬화하거나(serialize) 역직렬화(deserialize) 할 수 있기만 하면 된다.\n- 아주 많은 양의 데이터를 저장할 필요가 있다."},
		{"id":"67f508c5f2246406","x":105,"y":-560,"width":507,"height":136,"type":"text","text":"사용자가 늘면 서버 하나로는 충분하지 않아서 여러 서버를 두어야 한다.\n하나는 웹/모바일 트래픽 처리 용도고, 다른 하나는 데이터베이스용이다.\n\n웹/모바일 트래픽 처리 서버와 데이터베이스 서버를 분리하면 그 각각을 독립적으로 확장해 나갈 수 있게 된다."},
		{"id":"91c187a1d7409d6a","x":820,"y":-629,"width":542,"height":275,"type":"text","text":"많은 DBMS가 다중화를 지원한다. 보통 서버 사이에 주(master)-부(slave) 관계를 설정하고 데이터 원본은 주 서버에, 사본은 부 서버에 저장하는 방식이다.\n\n쓰기 연산은 master에서만 지원한다. 부 데이터베이스는 주 데이터베이스로부터 그 사본을 전달받으며, 읽기 연산만을 지원한다.\n\n데이터베이스를 변경하는 명령어들, 가령 `insert`, `delete`, `update` 등은 주 데이터베이스로만 전달되어야 한다. 대부분의 애플리케이션은 읽기 연산의 비중이 쓰기 연산보다 훨씬 높다. 따라서 통상 부 데이터베이스의 수가 주 데이터베이스의 수보다 많다."},
		{"id":"a704a787a09a51b6","x":1475,"y":-858,"width":602,"height":334,"type":"text","text":"- **더 나은 성능**\n\t-  주-부 다중화 모델에서 모든 데이터 변경 연산은 주 데이터베이스 서버로만 전달되는 반면 읽기 연산은 부 데이터베이스 서버들로 분산된다.\n\t- 병렬로 처리될 수 있는 질의(query)의 수가 늘어나므로, 성능이 좋아진다.\n- **안정성(reliability)**\n\t- 자연 재해 등의 이유로 데이터베이스 서버 가운데 일부가 파괴되어도 데이터는 보존될 것이다.\n\t- 데이터를 지역적으로 떨어진 여러 장소에 다중화 시켜 놓을 수 있기 때문이다.\n- **가용성(availability)**\n\t- 데이터를 여러 지역에 복제해 둠으로써, 하나의 데이터베이스 서버에 장애가 발생하더라도 다른 서버에 있는 데이터를 가져와 계속 서비스할 수 있게 된다."},
		{"id":"1009a31a551a137a","x":1475,"y":-460,"width":685,"height":377,"type":"text","text":"- **부 서버가 한 대 뿐인데 다운된 경우**라면, **읽기 연산은 한시적으로 모두 주 데이터베이스로 전달**될 것이다. 또한 **즉시 새로운 부 데이터베이스 서버가 장애 서버를 대체**할 것이다.\n- **부 서버가 여러 대인 경우**에 읽기 연산은 **나머지 부 데이터베이스 서버들로 분산** 될 것이며, **새로운 부 데이터베이스 서버가 장애 서버를 대체**할 것이다.\n\t- 주 데이터베이스 서버가 다운되면, 한 대의 부 데이터베이스만 있는 경우 해당 부 데이터베이스 서버가 새로운 주 서버가 될 것이며, 모든 데이터베이스 연산은 일시적으로 새로운 주 서버 상에서 수행될 것이다. 그리고 새로운 부 서버가 추가될 것이다.\n\t  프로덕션 환경에서 벌어지는 일은 이것보다는 사실 더 복잡한데, 부 서버에 보관된 데이터가 최신 상태가 아닐 수 있기 때문이다.\n\t\t- 없는 데이터는 복구 스크립트를 돌려서 추가해야 된다.\n\t\t- 다중 마스터(multi-masters)나 원형 다중화(circular replication) 방식을 도입하면 이런 상황에 대처하는 데 도움이 될 수 있지만 해당 구성은 훨씬 복잡하다."},
		{"id":"539417fc147fad9d","x":847,"y":-980,"width":489,"height":245,"type":"text","text":"### DB 다중화 요청 처리 흐름\n1. 사용자는 DNS로부터 로드밸런서의 공개 IP 주소를 받는다.\n2. 사용자는 해당 IP 주소를 사용해 로드밸런서에 접속한다.\n3. HTTP 요청은 서버 1이나 서버 2로 전달된다.\n4. 웹 서버는 사용자의 데이터를 부 데이터베이스 서버에서 읽는다.\n5. 웹 서버는 데이터 변경 연산은 주 데이터베이스로 전달한다.\n\t- 데이터 추가, 삭제, 갱신 연산 등이 이에 해당한다."},
		{"id":"b322e49c8bd72096","x":876,"y":-79,"width":486,"height":239,"type":"text","text":"응답 시간은 캐시를 붙이고 정적 콘텐츠를 콘텐츠 전송 네트워크(Content Delivery Network, CDN)로 옮기면 개선할 수 있다.\n\n캐시는 값비싼 연산 결과 또는 자주 참조되는 데이터를 메모리 안에 두고, 뒤이은 요청이 보다 빨리 처리될 수 있도록 하는 저장소다."}
	],
	"edges":[
		{"id":"1a5c220a4e77b827","fromNode":"65666eefcf08e6b4","fromSide":"right","toNode":"a8da08442d66dc09","toSide":"left","label":"단일 서버"},
		{"id":"23bc96ffc69190e5","fromNode":"a8da08442d66dc09","fromSide":"top","toNode":"67f508c5f2246406","toSide":"bottom","label":"DB"},
		{"id":"70300f288907260b","fromNode":"67f508c5f2246406","fromSide":"top","toNode":"cb7189ed5a1a51a8","toSide":"bottom","label":"어떤 DB를 사용할 것인가?"},
		{"id":"e8a8ea96c63561d1","fromNode":"67f508c5f2246406","fromSide":"right","toNode":"91c187a1d7409d6a","toSide":"left","label":"DB 다중화"},
		{"id":"1796315261c8314a","fromNode":"91c187a1d7409d6a","fromSide":"right","toNode":"a704a787a09a51b6","toSide":"left","label":"장점"},
		{"id":"e9d61a3b16551b6a","fromNode":"91c187a1d7409d6a","fromSide":"right","toNode":"1009a31a551a137a","toSide":"left","label":"대처"},
		{"id":"6f5e7f01971f4d08","fromNode":"91c187a1d7409d6a","fromSide":"top","toNode":"539417fc147fad9d","toSide":"bottom"},
		{"id":"8e33251c55cba00c","fromNode":"a8da08442d66dc09","fromSide":"right","toNode":"b322e49c8bd72096","toSide":"left","label":"캐시"}
	]
}