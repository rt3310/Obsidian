{
	"nodes":[
		{"id":"e1fb798ede82c62c","type":"file","file":"HTTP/Web Server/canvas/웹 서버.md","x":-340,"y":-240,"width":478,"height":298},
		{"id":"a5889d53a8a61974","type":"text","text":"웹 서버는 HTTP 및 그와 관련된 TCP 처리를 구현한 것이다.\n\n- 웹 서버는 자신이 제공하는 리소스를 관리하고 웹 서버를 설정, 통제, 확장하기 위한 관리 기능을 제공한다.\n- 웹 서버는 HTTP 프로토콜을 구현하고, 웹 리소스를 관리하고, 웹 서버 관리 기능을 제공한다.\n- 웹 서버는 TCP 커넥션 관리에 대한 책임을 운영체제와 나눠 갖는다.\n\t- 운영체제는 컴퓨터 시스템의 하드웨어를 관리하고 TCP/IP 네트워크 지원, 웹 리소스를 유지하기 위한 파일 시스템, 현재 연산 활동을 제어하기 위한 프로세스 관리를 제공한다.","x":260,"y":-238,"width":570,"height":294},
		{"id":"3fc514c0546b5507","type":"text","text":"1. 커넥션을 맺는다.\n\t1. 클라이언트의 접속을 받아들이거나, 원치 않는 클라이언트라면 닫는다.\n2. 요청을 받는다.\n\t1. HTTP 요청 메시지를 네트워크로부터 읽어 들인다.\n3. 요청을 처리한다.\n\t1. 요청 메시지를 해석하고 행동을 취한다.\n4. 리소스에 접근한다.\n\t1. 메시지에서 지정한 리소스에 접근한다.\n5. 응답을 만든다.\n\t1. 올바른 헤더를 포함한 HTTP 응답 메시지를 생성한다.\n6. 응답을 보낸다.\n\t1. 응답을 클라이언트에게 돌려준다.\n7. 트랜잭션 로그로 남긴다.\n\t1. 로그파일에 트랜잭션 완료에 대한 기록을 남긴다.\n\n![[Pasted image 20240121104335.png]]","x":-418,"y":378,"width":634,"height":860},
		{"id":"554164189f73dc0d","type":"text","text":"클라이언트가 이미 서버에 대해 열려있는 지속적 커넥션을 갖고 있다면, 클라이언트는 요청을 보내기 위해 그 커넥션을 사용할 수 있다.\n그렇지 않다면, 클라이언트는 서버에 대한 새 커넥션을 열 필요가 있다.\n\n### 새 커넥션 다루기\n클라이언트가 웹 서버에 TCP 커넥션을 요청하면, 웹 서버는 그 커넥션을 맺고 TCP 커넥션에서 IP 주소를 추출하여 커넥션 맞은편에 어떤 클라이언트가 있는지 확인한다.\n일단 새 커넥션이 맺어지고 받아들여지면, 서버는 새 커넥션을 커넥션 목록에 추가하고 커넥션에서 오가는 데이터를 지켜보기 위한 준비를 한다.\n\n웹 서버는 어떤 커넥션이든 마음대로 거절하거나 즉시 닫을 수 있다.\n어떤 웹 서버들은 클라이언트의 IP 주소나 호스트 명이 인가되지 않았거나 악의적이라고 알려진 것인 경우 커넥션을 닫는다. 다른 신원 식별 기법 또한 사용될 수 있다.\n### 클라이언트 호스트 명 식별\n대부분의 웹 서버는 '역방향 DNS(reverse DNS)'를 사용해서 클라이언트의 IP 주소를 클라이언트의 호스트 명으로 변환하도록 설정되어 있다.\n\n웹 서버는 클라이언트 호스트 명을 구체적인 접근 제어와 로깅을 위해 사용할 수 있다.\n호스트 명 룩업(hostname lookup)은, 꽤 시간이 많이 걸릴 수 있어 웹 트랜잭션을 느려지게 할 수 있다.\n\n아파치에서는 HostnameLookups 설정 지시자로 호스트 명 룩업을 켤 수 있다.\n\n### ident를 통해 클라이언트 사용자 알아내기\n몇몇 웹 서버는 또한 IETF ident 프로토콜을 지원한다.\nident 프로토콜은 서버에게 어떤 사용자 이름이 HTTP 커넥션을 초기화했는지 찾아낼 수 있게 해준다.\n이 정보는 특히 웹 서버 로깅에서 유용하기 때문에, 널리 쓰이는 **일반 로그 포맷(Common Log Format)의 두 번째 필드는 각 HTTP 요청의 ident 사용자 이름을 담고 있다**.\n\n만약 클라이언트가 ident 프로토콜을 지원한다면, 클라이언트는 ident 결과를 위해 TCP 포트 113번을 listen한다.\n![[Pasted image 20240121164447.png]]\n위 그림은 어떻게 ident 프로토콜이 동작하는지 보여준다.\n\n(a)에서 클라이언트는 HTTP 커넥션을 연다. 서버는 그 후 자신의 커넥션을 클라이언트의 identd 서버 포트(113)를 향해 열고, 새 커넥션(클라이언트와 서버 포트 번호로 지정되는)에 대응하는 사용자 이름을 묻는 간단한 요청을 보낸다.","x":640,"y":160,"width":665,"height":1296},
		{"id":"50ecedb2c7188877","x":1480,"y":633,"width":861,"height":334,"type":"text","text":"ident는 조직 내부에서는 잘 사용할 수 있지만, 공공 인터넷에서는 다음을 포함한 여러 이유로 잘 동작하지 않는다.\n- 많은 클라이언트 PC는 identd 신원확인 프로토콜 데몬 소프트웨어를 실행하지 않는다.\n- ident 프로토콜은 HTTP 트랜잭션을 유의미하게 지연시킨다.\n- 방화벽이 ident 트래픽이 들어오는 것을 막는 경우가 많다.\n- ident 프로토콜은 안전하지 않고 조작하기 쉽다.\n- ident 프로토콜은 가상 IP 주소를 잘 지원하지 않는다.\n- 클라이언트 사용자 이름의 노출로 인한 프라이버시 침해의 우려가 있다.\n\n아파치 웹 서버의 경우 IdentityCheck 지시어를 사용해 ident 룩업을 사용하게 할 수 있다.\n만약 가용한 ident 정보가 없다면, 아파치는 ident 로그 필드를 하이픈(-)으로 채울 것이다. 보통 ident 정보가 없기 때문에 일반 로그 포맷 로그 파일의 두 번째 필드는 하이픈으로 채워진다."},
		{"id":"8b28b5e9d87b891d","x":483,"y":1596,"width":877,"height":1744,"type":"text","text":"커넥션에 데이터가 도착하면, 웹 서버는 네트워크 커넥션에서 그 데이터를 읽어 들이고 파싱하여 요청 메시지를 구성한다.\n![[Pasted image 20240121175321.png]]\n요청 메시지를 파싱할 때, 웹 서버는 다음과 같은 일을 한다.\n- 요청 줄을 파싱하여 요청 메서드, 지정된 리소스 식별자(URI), 버전 번호를 찾는다.\n\t- 각 값은 스페이스 한 개로 분리되어 있으며, 요청줄은 캐리지 리턴 줄바꿈(CRLF) 문자열로 끝난다.\n- 메시지 헤더들을 읽는다. \n\t- 각 메시지 헤더는 CRLF로 끝난다.\n- 헤더의 끝을 의미하는 CRLF로 끝나는 빈 줄을 찾아낸다. (존재한다면)\n- 요청 본문이 있다면, 읽어 들인다(길이는 Content-Length 헤더로 정의된다).\n\n요청 메시지를 파싱할 때, 웹 서버는 입력 데이터를 네트워크로부터 불규칙적으로 받는다.\n네트워크 커넥션은 언제라도 무효화될 수 있다.\n웹 서버는 파싱해서 이해하는 것이 가능한 수준의 분량을 확보할 때까지 데이터를 네트워크로부터 읽어서 메시지 일부분을 메모리에 임시로 저장해 둘 필요가 있다.\n\n### 메시지의 내부 표현\n몇몇 웹 서버는 요청 메시지를 쉽게 다룰 수 있도록 내부의 자료 구조에 저장한다.\n![[Pasted image 20240121175747.png]]\n예를 들어, 그 자료 구조는 **요청 메시지의 각 조각에 대한 포인터와 길이**를 담을 수 있을 것이고, **헤더는 속도가 빠른 룩업 테이블에 저장**되어 각 필드에 신속하게 접근할 수 있을 것이다.\n\n### 커넥션 입력/출력 처리 아키텍처\n고성능 웹 서버는 수천 개의 커넥션을 동시에 열 수 있도록 지원한다.\n이 커넥션들은 웹 서버가 전 세계의 클라이언트들과 각각 한 개 이상의 커넥션을 통해 통신할 수 있게 해준다.\n어떤 커넥션들로부터는 요청이 느리게 혹은 드물게 흘러 들어오고, 또 어떤 것들은 나중에 일어날 활동을 위해 조용히 대기하고 있는데 비해, 일부 커넥션들은 웹 서버로 급속히 요청을 보내고 있을 것이다.\n\n웹 서버들은 항상 새 요청을 주시하고 있다.\n왜냐하면 요청은 언제라도 도착할 수 있기 때문이다."}
	],
	"edges":[
		{"id":"b64a1dc7d9490e3c","fromNode":"e1fb798ede82c62c","fromSide":"right","toNode":"a5889d53a8a61974","toSide":"left"},
		{"id":"c9c12a225d80bd97","fromNode":"e1fb798ede82c62c","fromSide":"bottom","toNode":"3fc514c0546b5507","toSide":"top","label":"실행 과정"},
		{"id":"39792040aa84d0b8","fromNode":"3fc514c0546b5507","fromSide":"right","toNode":"554164189f73dc0d","toSide":"left","label":"클라이언트 커넥션 수락"},
		{"id":"094d1b639101982b","fromNode":"554164189f73dc0d","fromSide":"right","toNode":"50ecedb2c7188877","toSide":"left"},
		{"id":"cfb9546fc0c412ab","fromNode":"3fc514c0546b5507","fromSide":"right","toNode":"8b28b5e9d87b891d","toSide":"left","label":"요청 메시지 수신"}
	]
}