{
	"nodes":[
		{"id":"53817bc120f37e78","type":"text","text":"# 하드웨어의 시스템 클럭을 이용","x":59,"y":254,"width":411,"height":50},
		{"id":"49545273c8cd72e4","type":"text","text":"- RTC(Real Time Clock)라는 모듈을 사용\n- RTC는 메인보드에 붙어있어 전원은 끄더라도 계속 작동한다. 그러므로 컴퓨터 전원을 끄더라도 시간은 계속 흘러간다.\n- RTC는 카운터 회로를 통해 클럭을 발생시킨다.","x":640,"y":214,"width":522,"height":130},
		{"id":"7761a2bed8cf0de7","type":"text","text":"특정 시각(Epoch)을 기준으로 시스템 클럭의 틱을 세는 것으로 구현하는데 이를 **시스템 시간**이라고 부른다.","x":440,"y":455,"width":459,"height":60},
		{"id":"34d119fb70399b12","type":"text","text":"시스템 시간을 값으로 표현한 것을 **타임스탬프**라고 부른다.","x":1080,"y":455,"width":270,"height":58},
		{"id":"fd71f8946e69c547","type":"text","text":"- 컴퓨터를 키면 자동으로 현재 시간을 보여준다. 이는 시스템 시간을 **네트워크 타임 프로토콜(NTP)**을 통해 동기화하여 나타낸 시간이다.\n- NTP 서버에 네트워크 요청을 하여 현재 시간을 받을 수 있다.","x":59,"y":600,"width":485,"height":126},
		{"id":"4b49df2b58846a37","type":"text","text":"# 컴퓨터의 시간","x":-610,"y":340,"width":222,"height":66},
		{"id":"491a4454c5daa1b6","type":"file","file":"Projects/Study/5. ComputerStructure/Clock/md/NTP 서버.md","x":791,"y":903,"width":520,"height":361},
		{"id":"424571dc6fb6ef0d","type":"text","text":"- 전력 소비가 낮다.\n- 기본 시스템을 시간이 종요한 작업에서 떼어 놓을 수 있다.\n- 가끔 다른 방식보다 더 정확하다.","x":1350,"y":-340,"width":507,"height":101},
		{"id":"c8cf851cb2343e32","type":"text","text":"- 날짜와 시, 분, 초 등의 시간을 카운터하는 디지털 카운터 회로로 구성한다.\n- 카운터 회로에서 사용하는 클럭 발생회로에 필요한 수정 발진자로 마이크로프로세서와 별도로 주로 32.768kHz를 많이 사용한다.\n- 카운터 회로가 컴퓨터의 전원이 꺼져도 배터리를 사용하여 카운터 회로 전원을 계속 공급하여 시간 카운터 동작을 유지한다.","x":1350,"y":-125,"width":570,"height":195},
		{"id":"3905518bedb9eba0","type":"text","text":"1Hz: 1초에 한번","x":1522,"y":185,"width":177,"height":29},
		{"id":"33cbff9804c9d3aa","type":"file","file":"Projects/Study/5. ComputerStructure/Clock/md/NTP.md","x":54,"y":840,"width":546,"height":475},
		{"id":"5e1baa729106e142","type":"text","text":"PRC는 **원자 시계**로 시간을 측정하며 아래 계층 요소들이 동기화를 통해 시간을 알 수 있다.\n-> 그러므로 하위 계층일 수록 정밀도가 조금씩 떨어진다.","x":814,"y":1380,"width":468,"height":106},
		{"id":"29c5f80d53a5ab98","type":"text","text":"타임스탬프는 운영체제마다 기준 시간과 단위가 다를 수 있다.","x":1075,"y":600,"width":282,"height":60},
		{"id":"0cec6db080286f10","type":"text","text":"Unix 계열 운영체제에서 시간을 표시하는 방법을 **Unix Time**이라 부른다.","x":1433,"y":598,"width":321,"height":64},
		{"id":"020b328bfd47cd4a","type":"text","text":"# Unix Time\n- 1970년 1월 1일 0분 0시 0초가 기준 시각이다.\n- 기준 시각은 유닉스 개발자 데니스 리치가 그냥 정한 날짜이다.\n- 1970년 이전 시간은 음수로 표현된다.\n- 초 단위로 시간이 증가한다.","x":1411,"y":760,"width":364,"height":251},
		{"id":"77e8cf080dc13c0f","type":"text","text":"카운터 하나만 사용해서도 간단한 타이머 기능을 구현할 수 있지만, 다중 비트를 사용한 리플 카운터를 사용하는 이유는 더 다양하고 복잡한 타이밍 요구 사항을 충족시키기 위함이다.\n1. **더 긴 시간 간격**: 단일 비트 카운터는 두 가지 상태(0과 1)만을 가지기 때문에, 매우 제한된 시간 간격(예: 클록 주기의 두 배)만 생성할 수 있다. 반면에, 다중 비트 리플 카운터는 더 많은 상태를 가질 수 있으므로, 더 긴 시간 간격을 생성할 수 있다.\n\t- 예를 들어, 3비트 카운터는 최대 8(2^3)개의 다른 상태를 가질 수 있으므로, 클록 주기의 8배까지의 시간 간격을 생성할 수 있다.\n2. **다양한 타이밍 조건 생성**: 다중 비트 카운터를 사용하면, 각각의 비트가 다른 주기로 변화하므로, 이를 조합하여 다양한 타이밍 조건을 생성할 수 있다.\n\t- 예를 들어, 어떤 특정한 비트 조합이 나타나는 시점을 이벤트의 트리거로 사용할 수 있다. 이런 방식으로 복잡한 타이밍 시퀀스를 생성하는 것이 가능해진다.\n3. **효율적인 자원 사용**: 하나의 카운터만을 사용하여 긴 시간 간격을 생성하려면 매우 높은 클록 주파수가 필요할 수 있다. 하지만, 다중 비트 카운터를 사용하면, 더 낮은 클록 주파수로도 필요한 시간 간격을 생성할 수 있다. 이는 특히 배터리로 작동하는 장치에서 전력 소모를 줄이는 데 유용할 수 있다.\n4. **복잡한 시스템 설계 가능**: 다중 비트 리플 카운터를 사용하면, 여러 개의 타이머를 동시에 구현하거나, 시간에 따라 다양한 작업을 순차적으로 수행할 수 있는 복잡한 시스템을 설계할 수 있다. 이는 단일 비트 카운터로는 달성하기 어려운 수준의 유연성을 제공한다.\n    \n\n결론적으로, 다중 비트 리플 카운터를 사용하는 것은 타이머, 시계, 그리고 다양한 타이밍 기반의 응용 프로그램을 구현할 때 더 큰 유연성과 기능성을 제공하기 때문이다.","x":1700,"y":-1302,"width":716,"height":578},
		{"id":"566db53ef0fddf1b","type":"text","text":"- LocalDate, LocalTime, LocalDateTime\n- ZonedDateTime\n- Instant\n- Duration, Period\n- TemporalAdjuster","x":-698,"y":-49,"width":396,"height":170},
		{"id":"304091b8f6526748","type":"file","file":"Projects/Study/5. ComputerStructure/Clock/md/ZonedDateTime.md","x":-878,"y":-875,"width":756,"height":591},
		{"id":"fe514210ece0e96d","type":"text","text":"# 협정 시계시(UTC)\n- 원자 시계와 윤초 보정을 기반으로 표준화한 시각\n- 모든 시간대는 UTC+0을 기준으로 환산한다.\n- 대한민국의 시간은 UTC+9, 예를 들어 영국(UTC+0)이 오전 1시라면 대한민국은 오전 10시가 된다.","x":-963,"y":1396,"width":456,"height":219},
		{"id":"46e82e829f1042aa","type":"text","text":"# Time Zone\n동일한 로컬 시간을 따르는 지역을 의미하여, 주로 해당 국가에 의해 법적으로 지정된다. 보통 국가별로 각자의 고유한 타임존을 사용하고 있으며, 미국이나 캐나다처럼 면적이 넓은 나라인 경우 지역별로 각지 다른 타임존을 사용하기도 한다. 예를 들어 한국은 일본이나 필라우와 동일한 타임 존(Time Zone)이다.","x":-423,"y":1396,"width":623,"height":179},
		{"id":"01699ed1ae6422b4","type":"text","text":"- **윤초**: 지구 자전 속도의 불규칙성으로 인하여 발생하는 세계시와 세계협정시의 차이가 1초 이내로 되도록 보정하여 주는 것\n\t- 원자시와 세계시의 오차를 측정하여 0.9초 이상 벌어지면 윤초를 시행한다.\n- **원자시계**: 현재 1초의 길이는 세슘 원자를 이용해 정의한다.\n\t- 절대영도 조건에서 세슘 원자(133-55Cs)가 방출하는 특정한 파장의 빛이 9,192,631,770번 진동하는 시간으로 정의된다.\n\t- 국내에서는 한국표준과학연구원이 3대의 세슘원자시계와 1대의 수소-메이저 원자시계를 사용해서 대한민국 표준시를 정한다.","x":-999,"y":1720,"width":535,"height":340},
		{"id":"837d7537f453dcca","type":"text","text":"# UTC\n역사, 사회, 문화에 대한 맥락 없이 사건이 발생한 시각만을 고려하는 경우에 사용한다\n- 로깅(분산된 서버에 하나의 사건에 고유한 시간을 저장)\n- 감사\n- 시계열 데이터\n# Time Zone\nUI에 표시되는 시간을 사용자 기준으로 보여줄 때 사용한다.\n- 결제 시각\n- 푸시 알림 시간\n- UI 시각 표시\n- 캘린더","x":-720,"y":663,"width":482,"height":503},
		{"id":"3cf6957368c0507e","type":"file","file":"Projects/Study/5. ComputerStructure/Clock/md/RTC.md","x":590,"y":-370,"width":581,"height":440},
		{"id":"5451cdc86d5af036","type":"text","text":"컴퓨터 시계, 정확히는 컴퓨터에서 시간을 측정하는 기본 단위인 클록(clock)은 일반적으로 크리스털 오실레이터(crystal oscillator)를 사용하여 측정한다. 이 오실레이터는 매우 정확하게 진동하는 석영 크리스털을 이용하여, 컴퓨터에 일정한 속도로 신호를 제공한다. 이 신호를 클록 신호라고 하며, 컴퓨터의 다양한 컴포넌트는 이 클록 신호에 맞춰 동작한다.","x":537,"y":-580,"width":691,"height":118},
		{"id":"6d58224368308a27","type":"text","text":"컴퓨터 시간을 측정하는 데 석영 크리스털이 중요한 역할을 하는 것은 사실이지만, 단순히 시간을 측정하는 것 이상의 다양한 기능을 수행하기 위해 카운터 회로를 사용한다.\n석영 크리스털은 정확한 주파수의 클록 신호를 생성하는 데 사용되지만, 컴퓨터 시스템 내에서 이 클록 신호를 어떻게 활용할지는 카운터 회로를 통해 결정된다.\n\n1. **분할된 시간 단위 생성**: 석영 크리스털이 생성하는 클록 신호는 주로 매우 높은 주파수를 가진다다. 예를 들어, 컴퓨터 시스템은 수백만 헤르츠(MHz) 또는 심지어 수십억 헤르츠(GHz)의 클록 주파수를 가질 수 있다. 카운터 회로는 이러한 높은 주파수의 클록 신호를 다양한 시간 단위로 분할하여, 시스템의 다양한 부분이 필요로 하는 특정 주기의 신호를 생성할 수 있게 한다.\n2. **시스템 동기화**: 컴퓨터 시스템 내의 다양한 구성 요소들은 클록 신호에 따라 동기화되어 동작한다. 카운터 회로는 이 클록 신호를 기반으로 정확한 타이밍에 데이터를 전송하거나 처리 작업을 시작하는 등의 작업을 조정하는 데 중요한 역할을 한다. 이를 통해 모든 구성 요소가 일관되고 효율적으로 함께 작동할 수 있다.\n3. **타이머 및 시계 기능**: 컴퓨터 시스템에서는 다양한 타이머와 시계 기능이 필요합니다. 이러한 기능은 운영 체제의 스케줄링, 시간 경과에 따른 작업 실행, 사용자에게 현재 시간을 보여주는 기능 등에 사용된다. 카운터 회로는 석영 크리스털로부터 생성된 클록 신호를 기반으로 이러한 타이머 및 시계 기능을 정확하게 구현하는 데 필수적입니다.\n4. **특정 이벤트의 타이밍 제어**: 컴퓨터 시스템 내에서 특정 작업이나 이벤트는 정확한 타이밍에 실행되어야 할 수 있다. 카운터 회로는 이러한 조건을 만족시키기 위해, 예를 들어 특정 시간 동안 대기한 후 작업을 실행하거나, 주기적으로 반복되는 작업을 조정하는 등의 역할을 한다.","x":505,"y":-1280,"width":756,"height":534},
		{"id":"a3b67cd82c45cc39","type":"text","text":"CPU를 비롯한 모든 컴퓨터의 부품들은 특정한 신호에 맞추어 동작을 하는데, 이 특정한 신호를 가리키는 말이 클럭이다.","x":94,"y":0,"width":346,"height":88}
	],
	"edges":[
		{"id":"5a5e342f5052e38d","fromNode":"4b49df2b58846a37","fromSide":"right","toNode":"53817bc120f37e78","toSide":"left","label":"시간 측정 원리"},
		{"id":"e3b593b52f11476c","fromNode":"53817bc120f37e78","fromSide":"top","toNode":"a3b67cd82c45cc39","toSide":"bottom","label":"클럭?"},
		{"id":"33fe3456fa24bca3","fromNode":"53817bc120f37e78","fromSide":"right","toNode":"49545273c8cd72e4","toSide":"left","label":"원리"},
		{"id":"f7f9e451e30d3fe7","fromNode":"53817bc120f37e78","fromSide":"bottom","toNode":"7761a2bed8cf0de7","toSide":"left","label":"어떻게 이용?"},
		{"id":"01088f5f561e0309","fromNode":"7761a2bed8cf0de7","fromSide":"right","toNode":"34d119fb70399b12","toSide":"left","label":"표현"},
		{"id":"d806bd20cd9a0dfd","fromNode":"34d119fb70399b12","fromSide":"bottom","toNode":"29c5f80d53a5ab98","toSide":"top"},
		{"id":"5bde3b3be3714d8c","fromNode":"29c5f80d53a5ab98","fromSide":"right","toNode":"0cec6db080286f10","toSide":"left"},
		{"id":"23672ec06888c76a","fromNode":"0cec6db080286f10","fromSide":"bottom","toNode":"020b328bfd47cd4a","toSide":"top","label":"Unix Time?"},
		{"id":"20385d8c4b50aa6d","fromNode":"4b49df2b58846a37","fromSide":"right","toNode":"fd71f8946e69c547","toSide":"left","label":"현재 시간을 알아내는 방법"},
		{"id":"2f9cf6479d491b93","fromNode":"33cbff9804c9d3aa","fromSide":"right","toNode":"491a4454c5daa1b6","toSide":"left","label":"NTP 서버?"},
		{"id":"53baeb9882d6e708","fromNode":"491a4454c5daa1b6","fromSide":"bottom","toNode":"5e1baa729106e142","toSide":"top","label":"PRC?"},
		{"id":"787d77a82a8d4722","fromNode":"4b49df2b58846a37","fromSide":"bottom","toNode":"837d7537f453dcca","toSide":"top","label":"어떤 기준으로 사용?"},
		{"id":"1a1ea709f55f826c","fromNode":"837d7537f453dcca","fromSide":"bottom","toNode":"46e82e829f1042aa","toSide":"top","label":"Time Zone?"},
		{"id":"41d6d46839fafe79","fromNode":"837d7537f453dcca","fromSide":"bottom","toNode":"fe514210ece0e96d","toSide":"top","label":"UTC?"},
		{"id":"37d37f337e8c231f","fromNode":"fe514210ece0e96d","fromSide":"bottom","toNode":"01699ed1ae6422b4","toSide":"top","label":"용어 정리"},
		{"id":"39f6f88d75ad29f8","fromNode":"4b49df2b58846a37","fromSide":"top","toNode":"566db53ef0fddf1b","toSide":"bottom","label":"Java Library"},
		{"id":"244264ead5b4ba72","fromNode":"566db53ef0fddf1b","fromSide":"top","toNode":"304091b8f6526748","toSide":"bottom","label":"ZonedDateTime"},
		{"id":"f2a338844aee3ce5","fromNode":"fd71f8946e69c547","fromSide":"bottom","toNode":"33cbff9804c9d3aa","toSide":"top","label":"NTP?"},
		{"id":"f983889f9355cedc","fromNode":"49545273c8cd72e4","fromSide":"top","toNode":"3cf6957368c0507e","toSide":"bottom","label":"RTC?"},
		{"id":"cc7b4f138ab48391","fromNode":"3cf6957368c0507e","fromSide":"right","toNode":"424571dc6fb6ef0d","toSide":"left","label":"이점"},
		{"id":"378a08c6b35e3530","fromNode":"3cf6957368c0507e","fromSide":"right","toNode":"c8cf851cb2343e32","toSide":"left","label":"구성요소/기능"},
		{"id":"85b82baeb09bcdc9","fromNode":"3cf6957368c0507e","fromSide":"top","toNode":"5451cdc86d5af036","toSide":"bottom"},
		{"id":"3b3960e1dc89417e","fromNode":"c8cf851cb2343e32","fromSide":"bottom","toNode":"3905518bedb9eba0","toSide":"top"},
		{"id":"f588f21144cf6644","fromNode":"5451cdc86d5af036","fromSide":"top","toNode":"6d58224368308a27","toSide":"bottom","label":"크리스털이 있는데\n카운터 회로는 왜 필요한가?"},
		{"id":"cabf7c1bcfff2895","fromNode":"6d58224368308a27","fromSide":"right","toNode":"77e8cf080dc13c0f","toSide":"left","label":"카운터 1개만 있어도 될 거 같은데,\n왜 리플 카운터를 구성하는가?"}
	]
}