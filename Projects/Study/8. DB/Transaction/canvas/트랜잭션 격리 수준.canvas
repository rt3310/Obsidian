{
	"nodes":[
		{"id":"f7ee296a63e98a81","type":"file","file":"Projects/Study/8. DB/Transaction/md/REPEATABLE READ.md","x":320,"y":-642,"width":513,"height":145},
		{"id":"5963306d0a3fcc90","type":"file","file":"Projects/Study/8. DB/Transaction/md/READ COMMITTED.md","x":258,"y":-200,"width":546,"height":145},
		{"id":"c60cd8af68e59e5b","type":"file","file":"Projects/Study/8. DB/Transaction/md/READ COMMITTED 작동 방식.md","x":141,"y":100,"width":740,"height":1330},
		{"id":"63e30ca8e3ae6fff","type":"file","file":"Projects/Study/8. DB/Transaction/md/Non-Repeatable Read.md","x":141,"y":1600,"width":740,"height":1704},
		{"id":"3e0701bc6a8cbd11","type":"file","file":"Projects/Study/8. DB/Transaction/md/MVCC.md","x":1191,"y":-800,"width":603,"height":346},
		{"id":"dcbb3435d83bc9d2","type":"text","text":"# Transaction 격리 수준","x":-775,"y":-584,"width":328,"height":39},
		{"id":"c50d0668cf011443","type":"text","text":"여러 트랜잭션이 동시에 처리될 때, 특정 트랜잭션이 다른 트랜잭션에서 변경하거나 조회하는 데이터를 볼 수 있게 허용할지 여부를 결정하는 것","x":-873,"y":-843,"width":507,"height":87},
		{"id":"1a3a712d3cd012fb","type":"file","file":"Projects/Study/8. DB/Transaction/md/SERIALIZABLE.md","x":320,"y":-986,"width":631,"height":206},
		{"id":"434c95c3c3bafa5a","type":"file","file":"Projects/Study/8. DB/Transaction/md/SERIALIZABLE 작동 방식.md","x":1191,"y":-1220,"width":664,"height":322},
		{"id":"299e28e22db03d3c","type":"file","file":"Projects/Study/8. DB/Transaction/md/READ UNCOMMITTED의 Dirty Read.md","x":-634,"y":100,"width":672,"height":1394},
		{"id":"73ab70cc7220a78d","type":"text","text":"READ UNCOMMITTED는 부정합 문제가 지나치게 발생하고, SERIALIZABLE은 도잇성이 상당히 떨어지므로 READ COMMITED 또는 REPEATABLE READ를 사용하면 된다. 참고로 오라클에서는 READ COMMITED를 기본으로 사용하며, MySQL에서는 REPEATABLE READ를 기본으로 사용한다.\n\n||Dirty Read|Non-Repeatable Read|Phantom Read|\n|-|-|-|-|\n|READ UNCOMMITTED|발생|발생|발생|\n|READ COMMITTED|없음|발생|발생|\n|REPEATABLE READ|없음|없음|발생(MySQL은 거의 없음)|\n|SERIALIZABLE|없음|없음|없음|\n\n격리 수준이 높아질수록 MySQL 서버의 처리 성능이 많이 떨어질 것으로 생각하는데, 사실 SERIALIZABLE이 아니라면 크게 성능 개선 및 저하는 발생하지 않는다. 그 이유는 결국 언두 로그를 통해 레코드를 참조하는 과정이 거의 동일하기 때문이다. 따라서 MySQL은 갭락을 통해 Phantom Read까지 거의 발생하지 않고, READ COMMITTED 보다는 동시 처리 성능은 뛰어난 REPEATABLE READ를 사용한다.\n","x":-737,"y":-1340,"width":995,"height":354},
		{"id":"859dbc88d79efbaa","type":"file","file":"Projects/Study/8. DB/Transaction/md/MySQL Phantom Read.md","x":3728,"y":-624,"width":929,"height":2353},
		{"id":"c03e762b8b9ce420","type":"text","text":"# 트랜잭션 내에서 SELECT vs 없이 SELECT\nREPEATABLE READ에서는 트랜잭션 번호를 바탕으로 실제 테이블 데이터와 언두 영역의 데이터 등을 비교하며 어떤 데이터를 조회할 지 판단한다. 즉, 트랜잭션 안에서 실행되는 SELECT 라면 항상 일관된 데이터를 조회하게 된다.\n하지만 트랜잭션 없이 실행된다면, 데이터의 정합성이 깨지는 상황이 생길 수 있다.\n\n커밋된 데이터만을 보여주는 READ COMMITTED 수준에서는 둘의 차이가 거의 없다.","x":3896,"y":1936,"width":593,"height":229,"color":"5"},
		{"id":"f06c929a4b103795","type":"text","text":"- [[SERIALIZABLE]]\n- [[REPEATABLE READ]]\n- [[READ COMMITTED]]\n- [[READ UNCOMMITTED]]","x":-208,"y":-644,"width":246,"height":160},
		{"id":"82136eeeccd2995b","type":"file","file":"Projects/Study/8. DB/Transaction/md/REPEATABLE READ 작동 방식.md","x":1111,"y":-300,"width":824,"height":2045},
		{"id":"d2a9ddeec67aa424","type":"file","file":"Projects/Study/8. DB/Transaction/md/Phantom Read.md","x":2380,"y":-810,"width":880,"height":3010},
		{"id":"8a354b978516fed9","type":"file","file":"Projects/Study/8. DB/Transaction/md/READ UNCOMMITTED.md","x":-634,"y":-185,"width":744,"height":115}
	],
	"edges":[
		{"id":"024717a02585fb07","fromNode":"dcbb3435d83bc9d2","fromSide":"top","toNode":"c50d0668cf011443","toSide":"bottom","label":"트랜잭션 격리 수준?"},
		{"id":"f61fe5f84a7c6c94","fromNode":"dcbb3435d83bc9d2","fromSide":"right","toNode":"f06c929a4b103795","toSide":"left","label":"격리 수준 종류"},
		{"id":"9c4375081c546657","fromNode":"f06c929a4b103795","fromSide":"right","toNode":"1a3a712d3cd012fb","toSide":"left","label":"Serializable?"},
		{"id":"77d8699f2458b74e","fromNode":"1a3a712d3cd012fb","fromSide":"right","toNode":"434c95c3c3bafa5a","toSide":"left","label":"작동 방식"},
		{"id":"e8f4014e6521e8b7","fromNode":"f7ee296a63e98a81","fromSide":"right","toNode":"3e0701bc6a8cbd11","toSide":"left","label":"MVCC?"},
		{"id":"755d82fe72b6967c","fromNode":"f06c929a4b103795","fromSide":"right","toNode":"f7ee296a63e98a81","toSide":"left","label":"Repeatable Read?"},
		{"id":"e6362c426605c1bf","fromNode":"f7ee296a63e98a81","fromSide":"right","toNode":"82136eeeccd2995b","toSide":"left","label":"작동 방식"},
		{"id":"9ef4ac900a20b482","fromNode":"82136eeeccd2995b","fromSide":"right","toNode":"d2a9ddeec67aa424","toSide":"left","label":"Phantom Read는 언제 발생?"},
		{"id":"dd0c4628497d1e56","fromNode":"d2a9ddeec67aa424","fromSide":"right","toNode":"859dbc88d79efbaa","toSide":"left","label":"MySQL에서는?"},
		{"id":"59f9a5f1674ec602","fromNode":"859dbc88d79efbaa","fromSide":"bottom","toNode":"c03e762b8b9ce420","toSide":"top","label":"트랜잭션 유무에 따른 SELECT"},
		{"id":"f28df272a95fb4bd","fromNode":"f06c929a4b103795","fromSide":"right","toNode":"5963306d0a3fcc90","toSide":"left","label":"Read Committed?"},
		{"id":"fb7ba33f29737d86","fromNode":"c60cd8af68e59e5b","fromSide":"bottom","toNode":"63e30ca8e3ae6fff","toSide":"top","label":"Non-Repeatable Read는 언제 발생?"},
		{"id":"703850ceb4f28e6e","fromNode":"5963306d0a3fcc90","fromSide":"bottom","toNode":"c60cd8af68e59e5b","toSide":"top"},
		{"id":"3ef75f641200e0f6","fromNode":"f06c929a4b103795","fromSide":"bottom","toNode":"8a354b978516fed9","toSide":"top"},
		{"id":"6f71198ed21719e2","fromNode":"8a354b978516fed9","fromSide":"bottom","toNode":"299e28e22db03d3c","toSide":"top"},
		{"id":"72f6699bae750db8","fromNode":"f06c929a4b103795","fromSide":"top","toNode":"73ab70cc7220a78d","toSide":"bottom","label":"요약"}
	]
}