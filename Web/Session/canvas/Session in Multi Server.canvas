{
	"nodes":[
		{"id":"42a5762343f26cb1","type":"text","text":"# Session in Multi Server","x":-560,"y":-259,"width":334,"height":39},
		{"id":"2e8bba703a9c0bfc","type":"text","text":"세션은 서버 1대에 하나의 저장소가 형성된다.\n나누어진 세션 저장소에 대한 별도의 처리가 없다면 각각의 세션들은 정합성 이슈를 발생시킨다.\n\n![[Session per WAS.png]]\n때문에 여러 대로 나뉜 서버가 하나의 서비스를 운영하기 위해서는 4개의 분리된 세션을 하나의 시스템처럼 동작하게 하거나, 고정된 세션을 사용해야 한다.","x":120,"y":-500,"width":560,"height":528},
		{"id":"e5462ca6ce8d8e8e","type":"text","text":"Sticky Session이란 말 그대로 고정된 세션을 의미한다.\n![[Pasted image 20231207162555.png]]\n\n예를 들어, User1이 1번부터 3번까지의 서버 중 1번 서버에 세션을 생성했다면, 이후에 User1이 보내는 모든 요청은 1번 서버로만 보내지게 된다. 즉, Load Balancer는 User가 첫 번째 세션을 생성한 서버로 모든 요청을 리다이렉트하여 고정된 세션만 사용하게 한다.\n\n이를 위해서 로드 밸런서는 요청을 받으면 가장 먼저 요청에 쿠키가 존재하는지 확인한다.\n쿠키가 있으면 해당 요청이 쿠키에 지정된 서버로 전송된다.\n쿠키가 없는 경우에는 로드 밸런서가 기존 로드 밸런싱 알고리즘을 기반으로 서버를 선정한다.\n\n동일한 사용자가 계속 해당 서버에 요청을 보낼 수 있도록 지속적으로 서버 정보가 쿠키를 통해 응답에 삽입되어 보내진다.\n\n이러한 방식을 사용하면 유저는 세션이 유지되는 동안 동일한 서버만을 사용하기 때문에 정합성 이슈에서 자유로워질 수 있다.","x":760,"y":-608,"width":660,"height":712},
		{"id":"ed1f565c95f83647","x":1574,"y":-381,"width":466,"height":341,"type":"text","text":"하지만 이 방식에도 단점이 존재한다.\n\n먼저, 고정된 세션을 사용한다는 것은 특정 서버에 트래픽이 집중될 위험이 있다.\n사용자가 접속해야 하는 서버가 정해져 있기 때문에 하나의 서버에 트래픽이 집중되어 있더라도 사용자는 자신의 세션이 없는 다른 서버를 사용ㅎ"}
	],
	"edges":[
		{"id":"14262ed411618757","fromNode":"42a5762343f26cb1","fromSide":"right","toNode":"2e8bba703a9c0bfc","toSide":"left","label":"세션의 정합성 이슈"},
		{"id":"b6b2ddd2c204cf06","fromNode":"2e8bba703a9c0bfc","fromSide":"right","toNode":"e5462ca6ce8d8e8e","toSide":"left"},
		{"id":"86dddb7a3920d08c","fromNode":"e5462ca6ce8d8e8e","fromSide":"right","toNode":"ed1f565c95f83647","toSide":"left"}
	]
}