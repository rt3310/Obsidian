{
	"nodes":[
		{"id":"dcbb3435d83bc9d2","x":-693,"y":-508,"width":310,"height":39,"type":"text","text":"# Transaction 격리 수준"},
		{"id":"c50d0668cf011443","x":-80,"y":-620,"width":507,"height":87,"type":"text","text":"여러 트랜잭션이 동시에 처리될 때, 특정 트랜잭션이 다른 트랜잭션에서 변경하거나 조회하는 데이터를 볼 수 있게 허용할지 여부를 결정하는 것"},
		{"id":"f06c929a4b103795","x":-151,"y":-387,"width":224,"height":130,"type":"text","text":"- Serializable\n- Repeatable Read\n- Read Commited\n- Read Uncommited"},
		{"id":"6994fe0a851c9c8b","x":380,"y":-439,"width":631,"height":117,"type":"text","text":"Serializable은 가장 엄격한 격리 수준으로, 이름 그대로 트랜잭션을 순차적으로 진행시킨다.\nSerializable에서 **여러 트랜잭션이 동일한 레코드에 동시 접근할 수 없으므로**, 어떠한 데이터 부정합 문제도 발생하지 않는다. 하지만 **트랜잭션이 순차적으로 처리되어야 하므로 동시 처리 성능이 매우 떨어진다**."},
		{"id":"93ba0fe1ec8da17b","x":1220,"y":-533,"width":664,"height":276,"type":"text","text":"MySQL에서 SELECT FOR SHARE/UPDATE는 대상 레코드에 각각 읽기/쓰기 잠금을 거는 것이다. 하지만 순수한 SELECT 작업은 아무런 레코드 잠금 없이 실행되는데, 잠금 없는 일관된 읽기(Non-locking consistent read)란 순수한 SELECT 문을 통한 잠금 없는 읽기를 의미하는 것이다.\n\n하지만 Serializable 격리 수준에서는 순수한 SELECT 작업에서도 대상 레코드에 넥스트 키 락을 읽기 잠금(공유락, Shared Lock)으로 건다. 따라서 한 트랜잭션에서 넥스트 키 락이 걸린 레코드를 다른 트랜잭션에서는 절대 추가/수정/삭제할 수 없다.\n\nSerializable은 가장 안전하지만 가장 성능이 떨어지므로, 극단적으로 안전한 작업이 필요한 경우가 아니라면 사용해서는 안된다."},
		{"id":"9c03b9c9dc3d97d0","x":1160,"y":-151,"width":603,"height":300,"type":"text","text":"일반적인 RDBMS는 **변경 전의 레코드를 언두 공간에 백업**해둔다. 그러면 **변경 전/후 데이터가 모두 존재**하므로, 동일한 레코드에 대해 여러 버전의 데이터가 존재한다고 하여 이를 **MVCC(Multi-Version Concurrency Control, 다중 버전 동시성 제어)** 라고 부른다.\n\nMVCC를 통해 트랜잭션이 롤백된 경우에 데이터를 복원할 수 있을 뿐만 아니라, 서로 다른 트랜잭션 간에 접근할 수 있는 데이터를 세밀하게 제어할 수 있다.\n\n각각의 트랜잭션은 순차 증가하는 고유한 트랜잭션 번호가 존재하며, 백업 레코드에는 어느 트랜잭션에 의해 백업되었는지 **트랜잭션 번호를 함께 저장**한다. 그리고 해당 데이터가 불필요해진다고 판단되는 시점에 주기적으로 백그라운드 쓰레드를 통해 삭제한다."},
		{"id":"c134db91d1f0d352","x":380,"y":-180,"width":513,"height":58,"type":"text","text":"Repeatable Read는 MVCC를 이용해 한 트랜잭션 내에서 동일한 결과를 보장하지만, **새로운 레코드가 추가되는 경우에 부정합이 생길 수 있다**."},
		{"id":"1662b66a33cf1174","x":1160,"y":220,"width":824,"height":580,"type":"text","text":"예를 들어 트랜잭션을 시작하고 id=50인 레코드를 조회하면 1건 조회되는 상황이라고 하자. 아직 트랜잭션은 종료되지 않았다."}
	],
	"edges":[
		{"id":"024717a02585fb07","fromNode":"dcbb3435d83bc9d2","fromSide":"right","toNode":"c50d0668cf011443","toSide":"left","label":"트랜잭션 격리 수준?"},
		{"id":"f61fe5f84a7c6c94","fromNode":"dcbb3435d83bc9d2","fromSide":"right","toNode":"f06c929a4b103795","toSide":"left","label":"격리 수준 종류"},
		{"id":"9c4375081c546657","fromNode":"f06c929a4b103795","fromSide":"right","toNode":"6994fe0a851c9c8b","toSide":"left","label":"Serializable?"},
		{"id":"77d8699f2458b74e","fromNode":"6994fe0a851c9c8b","fromSide":"right","toNode":"93ba0fe1ec8da17b","toSide":"left","label":"작동 방식"},
		{"id":"e8f4014e6521e8b7","fromNode":"c134db91d1f0d352","fromSide":"right","toNode":"9c03b9c9dc3d97d0","toSide":"left","label":"MVCC?"},
		{"id":"755d82fe72b6967c","fromNode":"f06c929a4b103795","fromSide":"right","toNode":"c134db91d1f0d352","toSide":"left","label":"Repeatable Read?"},
		{"id":"e6362c426605c1bf","fromNode":"c134db91d1f0d352","fromSide":"right","toNode":"1662b66a33cf1174","toSide":"left","label":"작동 방식"}
	]
}